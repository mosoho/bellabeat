## Set correct directory
# PC
setwd("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
source(2_Prepare_1_CSV load.R)
source('2_Prepare_1_CSV load.R')
## 2 - Prepare
# Load CSVs
source('2_Prepare_1_CSV load.R')
## 2 - Prepare
# Load CSVs
source('2_Prepare_1_CSV load.R')
## Set correct directory
# PC
setwd("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
## 2 - Prepare
# Load CSVs
source('2_Prepare_1_CSV load.R')
source("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis/0_Master.R", echo=TRUE)
# Master File for loading all pre-existing Packages + Scripts
## Set correct directory
# PC
setwd("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
# Laptop
# setwd("D:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
## 2 - Prepare
# Load CSVs
source('2_Prepare_1_CSV load.R')
## Reset correct directory
# PC
setwd("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
# Laptop
# setwd("D:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
# Identify data structures - no common loading needed
# source('2_Prepare_2_Identify data structures.R')
## 3 - Process
# Fix DATE issues
source('3_Process_1_Fix DATE issues.R')
# Correlation
source('3_Process_2_Corelation.R')
# Wide vs. Long
source('3_Process_2_Corelation.R')
# Dates are formatted as mm/dd/yyyy h:mm:ss am/pm for all tables (Group B), except
# dailyActivity, dailyCalories, dailyIntensities, dailySteps, where the format
# is mm/dd/yyyy (Group A)
## GROUP A: mm/dd/yyyy
# Create fixed columns: CHARACTER to DATE
daily_activity_v2 <- mutate(daily_activity, ActivityDateFixed = mdy(daily_activity$ActivityDate))
# Loading CSVs that failed to upload in SQL & fix them
# Load package(s)
library(tidyverse) # General cleaning package
library(skimr) # To load some data
library(lubridate) # As we have to clean up some dates
# Get right directory - PC
setwd("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Fitabase Data 4.12.16-5.12.16")
# Get right directory - Laptop
# setwd("D:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Fitabase Data 4.12.16-5.12.16")
# Load all CSVs
daily_activity <- read_csv("dailyActivity_merged.csv")
daily_calories <- read_csv("dailyCalories_merged.csv")
daily_intensities <- read_csv("dailyIntensities_merged.csv")
daily_steps <- read_csv("dailySteps_merged.csv")
heartrate_seconds <- read_csv("heartrate_seconds_merged.csv")
hourly_calories <- read_csv("hourlyCalories_merged.csv")
hourly_intensities <- read_csv("hourlyIntensities_merged.csv")
hourly_steps <- read_csv("hourlySteps_merged.csv")
minute_calories_narrow <- read_csv("minuteCaloriesNarrow_merged.csv")
minute_calories_wide <- read_csv("minuteCaloriesWide_merged.csv")
minute_intensities_narrow <- read_csv("minuteIntensitiesNarrow_merged.csv")
minute_intensities_wide <- read_csv("minuteIntensitiesWide_merged.csv")
minute_mets_narrow <- read_csv("minuteMETsNarrow_merged.csv")
minute_sleep <- read_csv("minuteSleep_merged.csv")
minute_steps_narrow <- read_csv("minuteStepsNarrow_merged.csv")
minute_steps_wide <- read_csv("minuteStepsWide_merged.csv")
sleep_day <- read_csv("sleepDay_merged.csv")
weight_log_info <- read_csv("weightLogInfo_merged.csv")
# Dates are formatted as mm/dd/yyyy h:mm:ss am/pm for all tables (Group B), except
# dailyActivity, dailyCalories, dailyIntensities, dailySteps, where the format
# is mm/dd/yyyy (Group A)
## GROUP A: mm/dd/yyyy
# Create fixed columns: CHARACTER to DATE
daily_activity_v2 <- mutate(daily_activity, ActivityDateFixed = mdy(daily_activity$ActivityDate))
daily_calories_v2 <- mutate(daily_calories, ActivityDayFixed = mdy(daily_calories$ActivityDay))
daily_intensities_v2 <- mutate(daily_intensities, ActivityDayFixed = mdy(daily_intensities$ActivityDay))
daily_steps_v2 <- mutate(daily_steps, ActivityDayFixed = mdy(daily_steps$ActivityDay))
# Remove old CHARACTER Date columns
daily_activity_v2 <- select(daily_activity_v2, -'ActivityDate')
daily_calories_v2 <- select(daily_calories_v2, -'ActivityDay')
daily_intensities_v2 <- select(daily_intensities_v2, -'ActivityDay')
daily_steps_v2 <- select(daily_steps_v2, -'ActivityDay')
# Rename new Date columns
daily_activity_v2 <- rename(daily_activity_v2, 'ActivityDate' = 'ActivityDateFixed')
daily_calories_v2 <- rename(daily_calories_v2, 'ActivityDay' = 'ActivityDayFixed')
daily_intensities_v2 <- rename(daily_intensities_v2, 'ActivityDay' = 'ActivityDayFixed')
daily_steps_v2 <- rename(daily_steps_v2, 'ActivityDay' = 'ActivityDayFixed')
# Put new column in 2nd position
## GROUP B: mm/dd/yyyy h:mm:ss am/pm
# Create fixed columns: CHARACTER to DATE
heartrate_seconds_v2 <- mutate(heartrate_seconds, TimeFixed = mdy_hms(heartrate_seconds$Time))
hourly_calories_v2 <- mutate(hourly_calories, ActivityHourFixed = mdy_hms(hourly_calories$ActivityHour))
hourly_intensities_v2 <- mutate(hourly_intensities, ActivityHourFixed = mdy_hms(hourly_intensities$ActivityHour))
hourly_steps_v2 <- mutate(hourly_steps, ActivityHourFixed = mdy_hms(hourly_steps$ActivityHour))
minute_calories_narrow_v2 <- mutate(minute_calories_narrow, ActivityMinuteFixed = mdy_hms(minute_calories_narrow$ActivityMinute))
minute_calories_wide_v2 <- mutate(minute_calories_wide, ActivityHourFixed = mdy_hms(minute_calories_wide$ActivityHour))
minute_intensities_narrow_v2 <- mutate(minute_intensities_narrow, ActivityMinuteFixed = mdy_hms(minute_intensities_narrow$ActivityMinute))
minute_intensities_wide_v2 <- mutate(minute_intensities_wide, ActivityHourFixed = mdy_hms(minute_intensities_wide$ActivityHour))
minute_mets_narrow_v2 <- mutate(minute_mets_narrow, ActivityMinuteFixed = mdy_hms(minute_mets_narrow$ActivityMinute))
minute_sleep_v2 <- mutate(minute_sleep, dateFixed = mdy_hms(minute_sleep$date))
minute_steps_narrow_v2 <- mutate(minute_steps_narrow, ActivityMinuteFixed = mdy_hms(minute_steps_narrow$ActivityMinute))
minute_steps_wide_v2 <- mutate(minute_steps_wide, ActivityHourFixed = mdy_hms(minute_steps_wide$ActivityHour))
sleep_day_v2 <- mutate(sleep_day, SleepDayFixed = mdy_hms(sleep_day$SleepDay))
weight_log_info_v2 <- mutate(weight_log_info, DateFixed = mdy_hms(weight_log_info$Date))
# Remove old CHARACTER Date columns
heartrate_seconds_v2 <- select(heartrate_seconds_v2, -'Time')
hourly_calories_v2 <- select(hourly_calories_v2, -'ActivityHour')
hourly_intensities_v2 <- select(hourly_intensities_v2, -'ActivityHour')
hourly_steps_v2 <- select(hourly_steps_v2, -'ActivityHour')
minute_calories_narrow_v2 <- select(minute_calories_narrow_v2, -'ActivityMinute')
minute_calories_wide_v2 <- select(minute_calories_wide_v2, -'ActivityHour')
minute_intensities_narrow_v2 <- select(minute_intensities_narrow_v2, -'ActivityMinute')
minute_intensities_wide_v2 <- select(minute_intensities_wide_v2, -'ActivityHour')
minute_mets_narrow_v2 <- select(minute_mets_narrow_v2, -'ActivityMinute')
minute_sleep_v2 <- select(minute_sleep_v2, -'date')
minute_steps_narrow_v2 <- select(minute_steps_narrow_v2, -'ActivityMinute')
minute_steps_wide_v2 <- select(minute_steps_wide_v2, -'ActivityHour')
sleep_day_v2 <- select(sleep_day_v2, -'SleepDay')
weight_log_info_v2 <- select(weight_log_info_v2, -'Date')
# Rename new Date columns
heartrate_seconds_v2 <- rename(heartrate_seconds_v2, 'Time' = 'TimeFixed')
hourly_calories_v2 <- rename(hourly_calories_v2, 'ActivityHour' = 'ActivityHourFixed')
hourly_intensities_v2 <- rename(hourly_intensities_v2, 'ActivityHour' = 'ActivityHourFixed')
hourly_steps_v2 <- rename(hourly_steps_v2, 'ActivityHour' = 'ActivityHourFixed')
minute_calories_narrow_v2 <- rename(minute_calories_narrow_v2, 'ActivityMinute' = 'ActivityMinuteFixed')
minute_calories_wide_v2 <- rename(minute_calories_wide_v2, 'ActivityHour' = 'ActivityHourFixed')
minute_intensities_narrow_v2 <- rename(minute_intensities_narrow_v2, 'ActivityMinute' = 'ActivityMinuteFixed')
minute_intensities_wide_v2 <- rename(minute_intensities_wide_v2, 'ActivityHour' = 'ActivityHourFixed')
minute_mets_narrow_v2 <- rename(minute_mets_narrow_v2, 'ActivityMinute' = 'ActivityMinuteFixed')
minute_sleep_v2 <- rename(minute_sleep_v2, 'date' = 'dateFixed')
minute_steps_narrow_v2 <- rename(minute_steps_narrow_v2, 'ActivityMinute' = 'ActivityMinuteFixed')
minute_steps_wide_v2 <- rename(minute_steps_wide_v2, 'ActivityHour' = 'ActivityHourFixed')
sleep_day_v2 <- rename(sleep_day_v2, 'SleepDay' = 'SleepDayFixed')
weight_log_info_v2 <- rename(weight_log_info_v2, 'Date' = 'DateFixed')
# Put new column in 2nd position (Just mark how to do it)
daily_activity_v2 <- daily_activity_v2 %>%
relocate(ActivityDate, .after = Id)
minute_calories_wide_v2 <- minute_calories_wide_v2 %>%
relocate(ActivityHour, .after = Id)
# Clean Up: Remove old tables
rm(daily_activity, daily_intensities, daily_calories, daily_steps,
heartrate_seconds, hourly_calories, hourly_intensities, hourly_steps,
minute_calories_narrow, minute_calories_wide, minute_intensities_narrow,
minute_intensities_wide, minute_mets_narrow, minute_sleep,
minute_steps_narrow, minute_steps_wide, sleep_day, weight_log_info)
# Daily_calories as already in daily_activity
cor(daily_activity_v2$Calories, daily_calories_v2$Calories)
# Daily_steps as already in daily_activity
cor(daily_activity_v2$TotalSteps, daily_steps_v2$StepTotal)
# Daily_intensities as already in daily_activity
cor(daily_activity_v2$SedentaryMinutes, daily_intensities_v2$SedentaryMinutes)
cor(daily_activity_v2$LightlyActiveMinutes, daily_intensities_v2$LightlyActiveMinutes)
cor(daily_activity_v2$FairlyActiveMinutes, daily_intensities_v2$FairlyActiveMinutes)
cor(daily_activity_v2$VeryActiveMinutes, daily_intensities_v2$VeryActiveMinutes)
cor(daily_activity_v2$SedentaryActiveDistance, daily_intensities_v2$SedentaryActiveDistance)
cor(daily_activity_v2$LightActiveDistance, daily_intensities_v2$LightActiveDistance)
cor(daily_activity_v2$ModeratelyActiveDistance, daily_intensities_v2$ModeratelyActiveDistance)
cor(daily_activity_v2$VeryActiveDistance, daily_intensities_v2$VeryActiveDistance)
# remove those tables that are not needed anymore
rm(daily_intensities_v2)
rm(daily_calories_v2)
rm(daily_steps_v2)
# See if narrow vs wide: If one table has more data points than the other
min(minute_calories_narrow_v2$ActivityMinute) # = 2016-04-12 00:00:00 UTC
max(minute_calories_narrow_v2$ActivityMinute) # = 2016-05-12 15:59:00 UTC
# 1 month + 16 hours
# UNIQUE: 2016-04-12 00:00:00 - 2016-04-12 23:59:00
min(minute_calories_wide_v2$ActivityHour) # 2016-04-13 00:00:00 UTC
max(minute_calories_wide_v2$ActivityHour) # 2016-05-13 08:59:00 UTC
# 1 month + 9 hours
# UNIQUE: 2016-05-12 16:00:00 - 2016-05-13 08:59:00
# COMMON: 2016-04-13 00:00:00 - 2016-05-12-15:59:00
# -> So Time points from minute_calories_narrow and _wide need to be combined to
#    give full time frame
min(minute_intensities_narrow_v2$ActivityMinute) # = 2016-04-12 00:00:00
max(minute_intensities_narrow_v2$ActivityMinute) # = 2016-05-12 15:59:00
min(minute_intensities_wide_v2$ActivityHour) # = 2016-04-13 00:00:00
max(minute_intensities_wide_v2$ActivityHour) # = 2016-05-13 08:59:00
# -> Same time frames as above
min(minute_steps_narrow_v2$ActivityMinute) # = 2016-04-12 00:00:00
max(minute_steps_narrow_v2$ActivityMinute) # = 2016-05-12 15:59:00
min(minute_steps_wide_v2$ActivityHour) # = 2016-04-13 00:00:00
max(minute_steps_wide_v2$ActivityHour) # = 2016-05-13 08:59:00
# -> Same time frames as above
## --> All narrow vs. wide tables have the same time frames
# Choose preferred format
# Lots of data: Long ("narrow") is preferred. So integrate wide data into long
# ("narrow") data
# FORMAT WIDE -> LONG
minute_calories_wide_v3 <- gather(minute_calories_wide_v2, ActivityMinute,
Calories, Calories00:Calories59,
factor_key=TRUE)
# RENAME: Now I could extract all ActivityMinute values to their respective
#         numbers: Last 2 characters. Then remove old column
minute_calories_wide_v3$ActivityMinute_short <- str_sub(minute_calories_wide_v3$ActivityMinute, start = -2)
minute_calories_wide_v3 <- select(minute_calories_wide_v3, -'ActivityMinute')
minute_calories_wide_v3 <- minute_calories_wide_v3 %>%
rename(ActivityMinute = ActivityMinute_short)
minute_calories_wide_v3 <- relocate(minute_calories_wide_v3, ActivityMinute, .after = ActivityHour)
# TRANSFORM: Change DateType of ActivityHour to Character and only select first
#            14 characters
minute_calories_wide_v3$ActivityHour_CHR <- str_sub(as.character(minute_calories_wide_v3$ActivityHour), 1, 14)
# MERGE: ActivityHour_CHR + ActivityMinute = ActivityMinuteNew
minute_calories_wide_v4 <- minute_calories_wide_v3 %>%
unite(ActivityMinuteNew, c('ActivityHour_CHR', 'ActivityMinute'), sep = '')
# TRANSFORM: Change back to DATE(TIME)
minute_calories_wide_v5 <- mutate(minute_calories_wide_v4, ActivityMinuteNewNew = ymd_hm(minute_calories_wide_v4$ActivityMinuteNew))
# Clean Up tables and columns
rm(minute_calories_wide_v3, minute_calories_wide_v4)
minute_calories_wide_v5 <- select(minute_calories_wide_v5, -'ActivityMinuteNew')
minute_calories_wide_v5 <- select(minute_calories_wide_v5, -'ActivityHour')
minute_calories_wide_v5 <- rename(minute_calories_wide_v5, ActivityMinute = ActivityMinuteNewNew)
minute_calories_wide_v5 <- arrange(minute_calories_wide_v5, Id, ActivityMinute)
# VALID? See if existing data points are matching
# Would have to create unique id from customer + timepoint and then check values
# of both tables against each other
# Then Left Join former wide (now long) into "narrow"
left_join(x, y, by = c("df1ColName" = "df2ColName")).
# Master File for loading all pre-existing Packages + Scripts
## Set correct directory
# PC
setwd("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
# Laptop
# setwd("D:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
## 2 - Prepare
# Load CSVs
source('2_Prepare_1_CSV load.R')
## Reset correct directory
# PC
setwd("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
# Laptop
# setwd("D:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
# Identify data structures - no common loading needed
# source('2_Prepare_2_Identify data structures.R')
## 3 - Process
# Fix DATE issues
source('3_Process_1_Fix DATE issues.R')
# Correlation
source('3_Process_2_Corelation.R')
# Wide vs. Long
source('3_Process_2_Corelation.R')
# Wide vs. Long
source('3_Process_3_Wide vs Long.R')
# Master File for loading all pre-existing Packages + Scripts
## Set correct directory
# PC
setwd("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
# Laptop
# setwd("D:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
## 2 - Prepare
# Load CSVs
source('2_Prepare_1_CSV load.R')
## Reset correct directory
# PC
setwd("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
# Laptop
# setwd("D:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
# Identify data structures - no common loading needed
# source('2_Prepare_2_Identify data structures.R')
## 3 - Process
# Fix DATE issues
source('3_Process_1_Fix DATE issues.R')
# Correlation
source('3_Process_2_Corelation.R')
# Wide vs. Long
source('3_Process_3_Wide vs Long.R')
# Master File for loading all pre-existing Packages + Scripts
## Set correct directory
# PC
setwd("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
# Laptop
# setwd("D:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
## 2 - Prepare
# Load CSVs
source('2_Prepare_1_CSV load.R')
## Reset correct directory
# PC
setwd("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
# Laptop
# setwd("D:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Analysis")
# Identify data structures - no common loading needed
# source('2_Prepare_2_Identify data structures.R')
## 3 - Process
# Fix DATE issues
source('3_Process_1_Fix DATE issues.R')
# Correlation
source('3_Process_2_Corelation.R')
# Wide vs. Long
# source('3_Process_3_Wide vs Long.R')
# See if narrow vs wide: If one table has more data points than the other
min(minute_calories_narrow_v2$ActivityMinute) # = 2016-04-12 00:00:00 UTC
max(minute_calories_narrow_v2$ActivityMinute) # = 2016-05-12 15:59:00 UTC
# 1 month + 16 hours
# UNIQUE: 2016-04-12 00:00:00 - 2016-04-12 23:59:00
min(minute_calories_wide_v2$ActivityHour) # 2016-04-13 00:00:00 UTC
max(minute_calories_wide_v2$ActivityHour) # 2016-05-13 08:59:00 UTC
# 1 month + 9 hours
# UNIQUE: 2016-05-12 16:00:00 - 2016-05-13 08:59:00
# COMMON: 2016-04-13 00:00:00 - 2016-05-12-15:59:00
# -> So Time points from minute_calories_narrow and _wide need to be combined to
#    give full time frame
min(minute_intensities_narrow_v2$ActivityMinute) # = 2016-04-12 00:00:00
max(minute_intensities_narrow_v2$ActivityMinute) # = 2016-05-12 15:59:00
min(minute_intensities_wide_v2$ActivityHour) # = 2016-04-13 00:00:00
max(minute_intensities_wide_v2$ActivityHour) # = 2016-05-13 08:59:00
# -> Same time frames as above
min(minute_steps_narrow_v2$ActivityMinute) # = 2016-04-12 00:00:00
max(minute_steps_narrow_v2$ActivityMinute) # = 2016-05-12 15:59:00
min(minute_steps_wide_v2$ActivityHour) # = 2016-04-13 00:00:00
max(minute_steps_wide_v2$ActivityHour) # = 2016-05-13 08:59:00
# -> Same time frames as above
## --> All narrow vs. wide tables have the same time frames
# Choose preferred format
# Lots of data: Long ("narrow") is preferred. So integrate wide data into long
# ("narrow") data
# FORMAT WIDE -> LONG
minute_calories_wide_v3 <- gather(minute_calories_wide_v2, ActivityMinute,
Calories, Calories00:Calories59,
factor_key=TRUE)
# RENAME: Now I could extract all ActivityMinute values to their respective
#         numbers: Last 2 characters. Then remove old column
minute_calories_wide_v3$ActivityMinute_short <- str_sub(minute_calories_wide_v3$ActivityMinute, start = -2)
minute_calories_wide_v3 <- select(minute_calories_wide_v3, -'ActivityMinute')
minute_calories_wide_v3 <- minute_calories_wide_v3 %>%
rename(ActivityMinute = ActivityMinute_short)
minute_calories_wide_v3 <- relocate(minute_calories_wide_v3, ActivityMinute, .after = ActivityHour)
# TRANSFORM: Change DateType of ActivityHour to Character and only select first
#            14 characters
minute_calories_wide_v3$ActivityHour_CHR <- str_sub(as.character(minute_calories_wide_v3$ActivityHour), 1, 14)
# MERGE: ActivityHour_CHR + ActivityMinute = ActivityMinuteNew
minute_calories_wide_v4 <- minute_calories_wide_v3 %>%
unite(ActivityMinuteNew, c('ActivityHour_CHR', 'ActivityMinute'), sep = '')
# TRANSFORM: Change back to DATE(TIME)
minute_calories_wide_v5 <- mutate(minute_calories_wide_v4, ActivityMinuteNewNew = ymd_hm(minute_calories_wide_v4$ActivityMinuteNew))
# Clean Up tables and columns
rm(minute_calories_wide_v3, minute_calories_wide_v4)
minute_calories_wide_v5 <- select(minute_calories_wide_v5, -'ActivityMinuteNew')
minute_calories_wide_v5 <- select(minute_calories_wide_v5, -'ActivityHour')
minute_calories_wide_v5 <- rename(minute_calories_wide_v5, ActivityMinute = ActivityMinuteNewNew)
minute_calories_wide_v5 <- arrange(minute_calories_wide_v5, Id, ActivityMinute)
# VALID? See if existing data points are matching
# Would have to create unique id from customer + timepoint and then check values
# of both tables against each other
# Then Left Join former wide (now long) into "narrow"
left_join(x, y, by = c("df1ColName" = "df2ColName")).
# Loading CSVs that failed to upload in SQL & fix them
# Load package(s)
library(tidyverse) # General cleaning package
library(skimr) # To load some data
library(lubridate) # As we have to clean up some dates
# Get right directory - PC
setwd("E:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Fitabase Data 4.12.16-5.12.16")
# Get right directory - Laptop
# setwd("D:/Dokumente/Ausbildung + Work/5_Weiterbildungen/2023_Google Data Analytics/Practice/Case Study/2/Fitabase Data 4.12.16-5.12.16")
# Load all CSVs
daily_activity <- read_csv("dailyActivity_merged.csv")
daily_calories <- read_csv("dailyCalories_merged.csv")
daily_intensities <- read_csv("dailyIntensities_merged.csv")
daily_steps <- read_csv("dailySteps_merged.csv")
heartrate_seconds <- read_csv("heartrate_seconds_merged.csv")
hourly_calories <- read_csv("hourlyCalories_merged.csv")
hourly_intensities <- read_csv("hourlyIntensities_merged.csv")
hourly_steps <- read_csv("hourlySteps_merged.csv")
minute_calories_narrow <- read_csv("minuteCaloriesNarrow_merged.csv")
minute_calories_wide <- read_csv("minuteCaloriesWide_merged.csv")
minute_intensities_narrow <- read_csv("minuteIntensitiesNarrow_merged.csv")
minute_intensities_wide <- read_csv("minuteIntensitiesWide_merged.csv")
minute_mets_narrow <- read_csv("minuteMETsNarrow_merged.csv")
minute_sleep <- read_csv("minuteSleep_merged.csv")
minute_steps_narrow <- read_csv("minuteStepsNarrow_merged.csv")
minute_steps_wide <- read_csv("minuteStepsWide_merged.csv")
sleep_day <- read_csv("sleepDay_merged.csv")
weight_log_info <- read_csv("weightLogInfo_merged.csv")
view_into <- function(df){
skim_without_charts(df)
head(df)
colnames(df)
glimpse(df)
}
#1 View into daily_activity how it's built
view_into(daily_activity)
skim_without_charts(daily_activity)
glimpse(daily_activity)
view_into <- function(df){
view_into_skim <- skim_without_charts(df)
view_into_head <- head(df)
view_into_colnames <- colnames(df)
view_into_glimpse <- glimpse(df)
}
view_into <- function(df){
view_into_skim <- skim_without_charts(df)
view_into_head <- head(df)
view_into_colnames <- colnames(df)
view_into_glimpse <- glimpse(df)
return(view_into_skim, view_into_head)
}
#1 View into daily_activity how it's built
view_into(daily_activity)
view_into <- function(df){
return(skim_without_charts(df))
view_into_head <- head(df)
view_into_colnames <- colnames(df)
view_into_glimpse <- glimpse(df)
}
#1 View into daily_activity how it's built
view_into(daily_activity)
view_into <- function(df){
return(skim_without_charts(df))
return(view_into_head <- head(df))
return(view_into_colnames <- colnames(df))
return(view_into_glimpse <- glimpse(df))
}
#1 View into daily_activity how it's built
view_into(daily_activity)
view_into <- function(df){
return(skim_without_charts(df))
return(head(df))
return(colnames(df))
return(glimpse(df))
}
#1 View into daily_activity how it's built
view_into(daily_activity)
view_into <- function(df){
view_into_skim <- skim_without_charts(df)
view_into_head <- head(df)
view_into_colnames <- colnames(df)
view_into_glimpse <- glimpse(df)
view_into_list <- list("skim" = view_into_skim, "head" = view_into_head)
return(view_into_list)
}
#1 View into daily_activity how it's built
view_into(daily_activity)
view_into <- function(df){
view_into_skim <- skim_without_charts(df)
view_into_head <- head(df)
view_into_colnames <- colnames(df)
view_into_glimpse <- glimpse(df)
view_into_list <- list("skim_without_charts" = view_into_skim,
"head" = view_into_head,
"colnames" = view_into_colnames,
"glimpse" = view_into_glimpse)
return(view_into_list)
}
#1 View into daily_activity how it's built
view_into(daily_activity)
#2 View into daily_calories how it's built
view_into(daily_calories)
#3 View into daily_calories how it's built
view_into(daily_intensities)
view_into(daily_activity)
