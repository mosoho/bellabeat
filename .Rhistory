#-> GGPlot: Every day
daily_activity_and_sleep %>%
ggplot(aes(x = factor(Day, weekdays(as.Date('1970-01-03') + 1:7)),
y = TotalSteps)) +
geom_boxplot() +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Weekdays')
## Day vs. TotalSteps
#-> Arrange plot to sort by days of week (Sunday to Saturday)
#--> First translate back to German
daily_activity_and_sleep$Day <- case_when(
daily_activity_and_sleep$Day == "Saturday" ~ "Samstag",
daily_activity_and_sleep$Day == "Sunday" ~ "Sonntag",
daily_activity_and_sleep$Day == "Monday" ~ "Montag",
daily_activity_and_sleep$Day == "Tuesday" ~ "Dienstag",
daily_activity_and_sleep$Day == "Wednesday" ~ "Mittwoch",
daily_activity_and_sleep$Day == "Thursday" ~ "Donnerstag",
daily_activity_and_sleep$Day == "Friday" ~ "Freitag",
)
#-> GGPlot: Every day
daily_activity_and_sleep %>%
ggplot(aes(x = factor(Day, weekdays(as.Date('1970-01-03') + 1:7)),
y = TotalSteps)) +
geom_boxplot() +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Weekdays')
#-> GGPlot: Week vs. Weekend
daily_activity_and_sleep %>%
ggplot(aes(x = Weekday,
y = TotalSteps)) +
geom_boxplot(width = 0.6, outlier.shape = NA) +
stat_summary(geom="text",fun.y=quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.362), size=3.5) +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Week vs Weekend') +
ylab('Total Steps')
#-> GGPlot: Every day
daily_activity_and_sleep %>%
ggplot(aes(x = factor(Day, weekdays(as.Date('1970-01-03') + 1:7)),
y = TotalSteps)) +
geom_boxplot() +
stat_summary(geom="text",fun.y=quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.362), size=3.5) +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Weekdays')
#-> GGPlot: Every day
daily_activity_and_sleep %>%
ggplot(aes(x = factor(Day, weekdays(as.Date('1970-01-03') + 1:7)),
y = TotalSteps)) +
geom_boxplot(outlier.shape = NA) +
stat_summary(geom="text",fun.y=quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.362), size=3.5) +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Weekdays')
#-> GGPlot: Week vs. Weekend
daily_activity_and_sleep %>%
ggplot(aes(x = Weekday,
y = TotalSteps)) +
geom_boxplot(width = 0.6, outlier.shape = NA) +
stat_summary(geom="text",fun.y=quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.362), size=3.5) +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Week vs Weekend') +
ylab('Total Steps')
summary(daily_activity_and_sleep)
#-> GGPlot: Every day
daily_activity_and_sleep %>%
ggplot(aes(x = factor(Day, weekdays(as.Date('1970-01-03') + 1:7)),
y = TotalSteps)) +
geom_boxplot(outlier.shape = NA) +
stat_summary(geom="text",fun.y=quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.362), size=3.5) +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Weekdays')
#-> GGPlot: Every day
daily_activity_and_sleep %>%
ggplot(aes(x = factor(Day, weekdays(as.Date('1970-01-03') + 1:7)),
y = TotalSteps)) +
geom_boxplot(outlier.shape = NA) +
# stat_summary(geom="text",fun.y=quantile,
aes(label=sprintf("%1.1f", ..y..)),
#-> GGPlot: Every day
daily_activity_and_sleep %>%
ggplot(aes(x = factor(Day, weekdays(as.Date('1970-01-03') + 1:7)),
y = TotalSteps)) +
geom_boxplot(outlier.shape = NA) +
# stat_summary(geom="text",fun.y=quantile,
#             aes(label=sprintf("%1.1f", ..y..)),
#             position=position_nudge(x=0.362), size=3.5) +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Weekdays')
View(daily_activity_and_sleep)
# Distance ----------------------------------------------------------------
daily_activity_and_sleep %>%
summary(VeryActiveDistance, ModeratelyActiveDistance, LightActiveDistance, SedentaryActiveDistance)
# Distance ----------------------------------------------------------------
daily_activity_and_sleep %>%
summary(VeryActiveDistance)
# Distance ----------------------------------------------------------------
summary(daily_activity_and_sleep$VeryActiveDistance)
summary(
select(
daily_activity_and_sleep$VeryActiveDistance,
daily_activity_and_sleep$ModeratelyActiveDistance,
daily_activity_and_sleep$LightActiveDistance,
daily_activity_and_sleep$SedentaryActiveDistance)
)
summary(daily_activity_and_sleep[c("VeryActiveDistance", "ModeratelyActiveDistance")])
summary(daily_activity_and_sleep[c("VeryActiveDistance",
"ModeratelyActiveDistance",
"LightActiveDistance",
"SedentaryActiveDistance")])
# Overall share of distance activity distribution
#1. SUM each column
distance_sum$VeryActiveDistance <- sum(daily_activity_and_sleep$VeryActiveDistance)
# Overall share of distance activity distribution
#1. SUM each column
distance_sum <- sum(daily_activity_and_sleep$VeryActiveDistance)
rm(distance_sum)
VeryActiveDistance_sum <- sum(daily_activity_and_sleep$VeryActiveDistance)
ModeratelyActiveDistance_sum <- sum(daily_activity_and_sleep$ModeratelyActiveDistance)
LightActiveDistance_sum <- sum(daily_activity_and_sleep$LightActiveDistance)
SedentaryActiveDistance_sum <- sum(daily_activity_and_sleep$SedentaryActiveDistance)
distance_sums <- data.frame(VeryActiveDistance_sum,
ModeratelyActiveDistance_sum,
LightActiveDistance_sum,
SedentaryActiveDistance_sum)
View(distance_sums)
View(distance_sums)
#2. Generate pie chart
daily_activity_and_sleep %>%
ggplot(aes(x = "", y = distance_sums)) +
geom_bar(stat="identity", width = 1) +
coord_polar("y", start = 0)
distance_sums <- data.frame(
group = c("VeryActiveDistance", "ModeratelyActiveDistance",
"LightActiveDistance", "SedentaryActiveDistance"),
value = c(VeryActiveDistance_sum, ModeratelyActiveDistance_sum,
LightActiveDistance_sum, SedentaryActiveDistance_sum)
)
#2. Generate pie chart
daily_activity_and_sleep %>%
ggplot(aes(x = "", y = distance_sums)) +
geom_bar(stat="identity", width = 1) +
coord_polar("y", start = 0)
#2. Generate pie chart
distance_sums %>%
ggplot(aes(x = "", y = value, fill = group)) +
geom_bar(stat="identity", width = 1) +
coord_polar("y", start = 0)
#2. Generate pie chart
distance_sums %>%
ggplot(aes(x = "", y = value, fill = group)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0)
#2. Generate pie chart
distance_sums %>%
ggplot(aes(x = "", y = value, fill = group)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void()
#clean up
rm(VeryActiveDistance_sum, ModeratelyActiveDistance_sum, SedentaryActiveDistance_sum, LightActiveDistance_sum)
VeryActiveDistance_sum <- sum(daily_activity_and_sleep$VeryActiveDistance)
ModeratelyActiveDistance_sum <- sum(daily_activity_and_sleep$ModeratelyActiveDistance)
LightActiveDistance_sum <- sum(daily_activity_and_sleep$LightActiveDistance)
SedentaryActiveDistance_sum <- sum(daily_activity_and_sleep$SedentaryActiveDistance)
distance_sums <- data.frame(
ActiveDistance = c("Very", "Moderately",
"Light", "Sedentary"),
Value = c(VeryActiveDistance_sum, ModeratelyActiveDistance_sum,
LightActiveDistance_sum, SedentaryActiveDistance_sum)
)
#clean up
rm(VeryActiveDistance_sum, ModeratelyActiveDistance_sum, SedentaryActiveDistance_sum, LightActiveDistance_sum)
#2. Generate pie chart
distance_sums %>%
ggplot(aes(x = "", y = value, fill = group)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
geom_text()
#2. Generate pie chart
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
geom_text()
#2. Generate pie chart
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void()
#2. Generate pie chart
#-> Compute labels positions
distance_sums <- distance_sums %>%
arrange(desc(ActiveDistance)) %>%
mutate(prop = Value / sum(distance_sums$Value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = group), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = group), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = ActiveDistance), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = ActiveDistance), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = ActiveDistance), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = prop, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = ActiveDistance), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = prop, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = ActiveDistance), color = "white", size=3) +
scale_fill_brewer(palette="Set1")
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = prop, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = ActiveDistance), color = "white", size=4) +
scale_fill_brewer(palette="Set1")
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = prop, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = ActiveDistance), color = "white", size=5) +
scale_fill_brewer(palette="Set1")
#2. Generate pie chart
#-> Compute labels positions
distance_sums <- distance_sums %>%
arrange(desc(Value)) %>%
mutate(prop = Value / sum(distance_sums$Value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = prop, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = ActiveDistance), color = "white", size=5) +
scale_fill_brewer(palette="Set1")
#2. Generate pie chart
#-> Compute labels positions
distance_sums <- distance_sums %>%
arrange(desc(ActiveDistance)) %>%
mutate(prop = Value / sum(distance_sums$Value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = prop, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = ActiveDistance), color = "white", size=5) +
scale_fill_brewer(palette="Set1")
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = prop, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
geom_text(aes(y = ypos, label = ActiveDistance), color = "white", size=5) +
scale_fill_brewer(palette="Set1")
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_col(color = "black") +
geom_text(aes(label = Value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_col(color = "black") +
geom_text(aes(label = Value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
theme_void() +
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_col(color = "black") +
geom_text(aes(label = Value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
theme_void()
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_col(color = "black") +
theme_void() +
geom_text(aes(label = Value),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_col(color = "black") +
theme_void() +
geom_text(aes(label = prop),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = prop, fill = ActiveDistance)) +
geom_bar(stat="identity", width = 1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +
geom_text(aes(y = ypos, label = ActiveDistance), color = "white", size=5) +
scale_fill_brewer(palette="Set1")
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_col(color = "black") +
theme_void() +
geom_text(aes(label = prop),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
#-> Generate ggplot2
distance_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveDistance)) +
geom_col(color = "black") +
theme_void() +
geom_text(aes(label = prop),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
# Minutes -----------------------------------------------------------------
summary(daily_activity_and_sleep[c("VeryActiveMinutes", "FairlyActiveMinutes",
"LightlyActiveMinutes", "SedentaryMinutes")])
# Distance ----------------------------------------------------------------
summary(daily_activity_and_sleep[c("VeryActiveDistance",
"ModeratelyActiveDistance",
"LightActiveDistance",
"SedentaryActiveDistance")])
# Minutes -----------------------------------------------------------------
summary(daily_activity_and_sleep[c("VeryActiveMinutes", "FairlyActiveMinutes",
"LightlyActiveMinutes", "SedentaryMinutes")])
VeryActiveMinutes_sum <- sum(daily_activity_and_sleep$VeryActiveMinutes)
FairlyActiveMinutes_sum <- sum(daily_activity_and_sleep$FairlyActiveMinutes)
LightlyActiveMinutes_sum <- sum(daily_activity_and_sleep$LightlyActiveMinutes)
SedentaryMinutes_sum <- sum(daily_activity_and_sleep$SedentaryMinutes)
minutes_sums <- data.frame(
ActiveMinutes = c("Very", "Fairly", "Lightly", "Sedentary"),
Value = c(VeryActiveMinutes_sum, FairlyActiveMinutes_sum,
LightlyActiveMinutes_sum, SedentaryMinutes_sum)
)
#clean up
rm(VeryActiveMinutes_sum, FairlyActiveMinutes_sum, LightlyActiveMinutes_sum, SedentaryMinutes_sum)
#clean up
rm(distance_sums)
View(minutes_sums)
#2. Generate pie chart
#-> Compute labels positions
minutes_sums <- minutes_sums %>%
arrange(desc(ActiveMinutes)) %>%
mutate(prop = Value / sum(minutes_sums$Value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
#-> Generate ggplot2
minutes_sums %>%
ggplot(aes(x = "", y = Value, fill = ActiveMinutes)) +
geom_col(color = "black") +
theme_void() +
geom_text(aes(label = prop),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
#clean up
rm(minutes_sums)
daily_activity_and_sleep %>%
ggplot(aes(x = SedentaryMinutes,
y = TotalTimeInBed)) +
geom_point(alpha = 0.5)
daily_activity_and_sleep %>%
ggplot(aes(x = TotalTimeInBed,
y = SedentaryMinutes)) +
geom_point(alpha = 0.5)
TotalTimeInBed
daily_activity_and_sleep %>%
ggplot(aes(x = SedentaryMinutes,
y = TotalTimeInBed)) +
geom_point(alpha = 0.5)
daily_activity_and_sleep %>%
ggplot(aes(x = SedentaryMinutes,
y = TotalTimeInBed)) +
geom_point(alpha = 0.5) +
geom_smooth()
cor(daily_activity_and_sleep$SedentaryMinutes, daily_activity_and_sleep$TotalTimeInBed)
cor(daily_activity_and_sleep$SedentaryMinutes, daily_activity_and_sleep$TotalTimeInBed, na.rm=TRUE)
cor(daily_activity_and_sleep$SedentaryMinutes, daily_activity_and_sleep$TotalTimeInBed, use="complete.obs")
summary(daily_activity_and_sleep)
summary(daily_activity_and_sleep$Calories)
daily_activity_and_sleep %>%
ggplot(aes(x = "", y = Calories))
summary(daily_activity_and_sleep$Calories)
daily_activity_and_sleep %>%
ggplot(aes(x = "", y = Calories))
daily_activity_and_sleep %>%
ggplot(aes(x = "", y = Calories)) +
geom_boxplot()
daily_activity_and_sleep %>%
ggplot(aes(x = "Calories", y = Calories)) +
geom_boxplot()
#-> GGPlot: Every day
daily_activity_and_sleep %>%
ggplot(aes(x = factor(Day, weekdays(as.Date('1970-01-03') + 1:7)),
y = TotalSteps)) +
geom_boxplot(outlier.shape = NA) +
# stat_summary(geom="text",fun.y=quantile,
#             aes(label=sprintf("%1.1f", ..y..)),
#             position=position_nudge(x=0.362), size=3.5) +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Weekdays')
daily_activity_and_sleep %>%
ggplot(aes(x = "Calories", y = Calories)) +
geom_boxplot()
#-> GGPlot: Every day
daily_activity_and_sleep %>%
ggplot(aes(x = factor(Day, weekdays(as.Date('1970-01-03') + 1:7)),
y = Calories)) +
geom_boxplot(outlier.shape = NA) +
# stat_summary(geom="text",fun.y=quantile,
#             aes(label=sprintf("%1.1f", ..y..)),
#             position=position_nudge(x=0.362), size=3.5) +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Weekdays')
#-> GGPlot: Week vs. Weekend
daily_activity_and_sleep %>%
ggplot(aes(x = Weekday,
y = Calories)) +
geom_boxplot(width = 0.6, outlier.shape = NA) +
stat_summary(geom="text",fun.y=quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.362), size=3.5) +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Week vs Weekend') +
ylab('Total Steps')
#-> GGPlot: Every day
daily_activity_and_sleep %>%
ggplot(aes(x = factor(Day, weekdays(as.Date('1970-01-03') + 1:7)),
y = Calories)) +
geom_boxplot(outlier.shape = NA) +
# stat_summary(geom="text",fun.y=quantile,
#             aes(label=sprintf("%1.1f", ..y..)),
#             position=position_nudge(x=0.362), size=3.5) +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Weekdays')
#-> GGPlot: Week vs. Weekend
daily_activity_and_sleep %>%
ggplot(aes(x = Weekday,
y = Calories)) +
geom_boxplot(width = 0.6, outlier.shape = NA) +
stat_summary(geom="text",fun.y=quantile,
aes(label=sprintf("%1.1f", ..y..)),
position=position_nudge(x=0.362), size=3.5) +
geom_jitter(color="red", size = 1, alpha = 0.3, width = 0.3) +
xlab('Week vs Weekend') +
ylab('Total Steps')
